get_filename_component(real_current_list_file "${CMAKE_CURRENT_LIST_FILE}" REALPATH)
get_filename_component(real_current_list_dir "${real_current_list_file}" DIRECTORY)
get_filename_component(CMAKE_FIND_ROOT_PATH "${real_current_list_dir}/../../.." ABSOLUTE)

message(STATUS "Setting up Eosio Wasm Toolchain @EOSIO_CDT_VERSION@ at ${CMAKE_FIND_ROOT_PATH}")

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR wasm32)
set(CMAKE_CROSSCOMPILING 1)
set(CMAKE_C_COMPILER_WORKS 1)
set(CMAKE_CXX_COMPILER_WORKS 1)

set(CMAKE_C_COMPILER "@LLVM_TOOLS_BINARY_DIR@/clang")
set(CMAKE_CXX_COMPILER "@LLVM_TOOLS_BINARY_DIR@/clang++")
set(CMAKE_ASM_COMPILER "@LLVM_TOOLS_BINARY_DIR@/clang")
set(CMAKE_AR "@LLVM_TOOLS_BINARY_DIR@/llvm-ar")
set(CMAKE_RANLIB "@LLVM_TOOLS_BINARY_DIR@/llvm-ranlib")

set(EOSIO_C_OPTIONS "-isystem ${CMAKE_FIND_ROOT_PATH}/include/${CMAKE_SYSTEM_PROCESSOR} --target=wasm32 -mthread-model single -ffreestanding -fno-threadsafe-statics")
set(EOSIO_CXX_OPTIONS "-isystem ${CMAKE_FIND_ROOT_PATH}/include/${CMAKE_SYSTEM_PROCESSOR}/c++/v1 ${EOSIO_C_OPTIONS} -nostdlib -fno-rtti -fno-exceptions -fno-c++-static-destructors -std=c++20")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-unknown-attributes ${EOSIO_C_OPTIONS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unknown-attributes ${EOSIO_CXX_OPTIONS}")
set(CMAKE_EXE_LINKER_FLAGS "-L ${CMAKE_FIND_ROOT_PATH}/lib/${CMAKE_SYSTEM_PROCESSOR} -fuse-ld=${CMAKE_FIND_ROOT_PATH}/bin/wasm-ld -Wl,--export-table -Wl,--gc-sections -Wl,--no-merge-data-segments -Wl,--stack-first -Wl,--lto-O3 -Wl,-export=__heap_base -Wl,-export=__data_end -Wl,-lc++ -Wl,-lc -Wl,-lcstdio -Wl,--allow-undefined-file=${CMAKE_FIND_ROOT_PATH}/eosio.imports")
set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES ${CMAKE_FIND_ROOT_PATH}/lib/${CMAKE_SYSTEM_PROCESSOR})
set(CMAKE_ASM_FLAGS "${CMAKE_ASM_FLAGS} -fasm")

set(CMAKE_EXECUTABLE_SUFFIX_C ".wasm")
set(CMAKE_EXECUTABLE_SUFFIX_CXX ".wasm")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

# hack for OSX
set(CMAKE_OSX_SYSROOT "@SYSROOT_DIR@")
set(CMAKE_OSX_DEPLOYMENT_TARGET "")
