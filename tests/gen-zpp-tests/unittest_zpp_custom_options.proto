syntax = "proto3";

import "zpp/zpp_options.proto";

package zpp_option_unittest;

message TestAllType {
  message NestedMessage {
    // The field name "b" fails to compile in proto1 because it conflicts with
    // a local variable named "b" in one of the generated methods.  Doh.
    // This file needs to compile in proto1 to test backwards-compatibility.
    int32 bb = 1;
  }

  enum NestedEnum {
    ZERO = 0;
    FOO = 1;
    BAR = 2;
    BAZ = 3;
    NEG = -1;  // Intentionally negative.
  }

  // Singular
  int32 optional_int32 = 1 [(zpp_optional)= true];
  int64 optional_int64 = 2 [(zpp_optional)= true];
  uint32 optional_uint32 = 3 [(zpp_optional)= true];
  uint64 optional_uint64 = 4 [(zpp_optional)= true];
  sint32 optional_sint32 = 5 [(zpp_optional)= true];
  sint64 optional_sint64 = 6 [(zpp_optional)= true];
  fixed32 optional_fixed32 = 7 [(zpp_optional)= true];
  fixed64 optional_fixed64 = 8 [(zpp_optional)= true];
  sfixed32 optional_sfixed32 = 9 [(zpp_optional)= true];
  sfixed64 optional_sfixed64 = 10 [(zpp_optional)= true];
  float optional_float = 11 [(zpp_optional)= true];
  double optional_double = 12 [(zpp_optional)= true];
  bool optional_bool = 13 [(zpp_optional)= true];
  string optional_string = 14 [(zpp_optional)= true];
  bytes optional_bytes = 15 [(zpp_optional)= true];

  
  NestedMessage optional_nested_message = 18 [(zpp_optional)= true];
  ForeignMessage optional_foreign_message = 19 [(zpp_optional)= true];
  // protobuf_unittest_import.ImportMessage optional_import_message = 20;

  NestedEnum optional_nested_enum = 21 [(zpp_optional)= true];
  ForeignEnum optional_foreign_enum = 22 [(zpp_optional)= true];

  fixed64 remap_type = 25 [(zpp_type) = "eosio::name"];
  fixed64 optional_remap_type = 26 [(zpp_type) = "eosio::name", (zpp_optional)= true];

  // Repeated
  repeated int32 repeated_int32 = 31 [(zpp_optional)= true];
  repeated int64 repeated_int64 = 32 [(zpp_optional)= true];
  repeated uint32 repeated_uint32 = 33 [(zpp_optional)= true];
  repeated uint64 repeated_uint64 = 34 [(zpp_optional)= true];
  repeated sint32 repeated_sint32 = 35 [(zpp_optional)= true];
  repeated sint64 repeated_sint64 = 36 [(zpp_optional)= true];
  repeated fixed32 repeated_fixed32 = 37 [(zpp_optional)= true];
  repeated fixed64 repeated_fixed64 = 38 [(zpp_optional)= true];
  repeated sfixed32 repeated_sfixed32 = 39 [(zpp_optional)= true];
  repeated sfixed64 repeated_sfixed64 = 40 [(zpp_optional)= true];
  repeated float repeated_float = 41 [(zpp_optional)= true];
  repeated double repeated_double = 42 [(zpp_optional)= true];
  repeated bool repeated_bool = 43 [(zpp_optional)= true];
  repeated string repeated_string = 44 [(zpp_optional)= true];
  repeated bytes repeated_bytes = 45 [(zpp_optional)= true];

  repeated NestedMessage repeated_nested_message = 48 [(zpp_optional)= true];
  repeated ForeignMessage repeated_foreign_message = 49 [(zpp_optional)= true];
  // repeated protobuf_unittest_import.ImportMessage repeated_import_message = 50 [(zpp_optional)= true];

  repeated NestedEnum repeated_nested_enum = 51 [(zpp_optional)= true];
  repeated ForeignEnum repeated_foreign_enum = 52 [(zpp_optional)= true];

}

// Define these after TestAllTypes to make sure the compiler can handle
// that.
message ForeignMessage {
  int32 c = 1;
}

enum ForeignEnum {
  FOREIGN_ZERO = 0;
  FOREIGN_FOO = 4;
  FOREIGN_BAR = 5;
  FOREIGN_BAZ = 6;
}
